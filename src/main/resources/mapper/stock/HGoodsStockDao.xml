<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="io.renren.modules.stock.dao.HGoodsStockDao">

    <!-- 可根据自己的需求，是否要使用 -->
    <resultMap type="io.renren.modules.stock.entity.HGoodsStock" id="hGoodsStockMap">
        <result property="goodsStockId" column="goods_stock_id"/>
        <result property="goodsId" column="goods_id"/>
        <result property="qty" column="qty"/>
    </resultMap>

    <select id="queryObject" resultType="io.renren.modules.stock.entity.HGoodsStock">
        select * from h_goods_stock where goods_stock_id = #{value}
    </select>

    <select id="queryList" resultType="io.renren.modules.stock.entity.HGoodsStock">
        select * from h_goods_stock
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by goods_stock_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>

    <select id="queryTotal" resultType="int">
        select count(*) from h_goods_stock
    </select>

    <select id="queryHGoodsStockVoList" resultType="io.renren.modules.stock.vo.HGoodsStockVo">
        select hgs.*,hgu.unit AS atomicUnit from h_goods_stock hgs LEFT JOIN h_goods_unit hgu ON
        hgs.goods_id=hgu.goods_id AND hgu.is_atomic=1
        <choose>
            <when test="sidx != null and sidx.trim() != ''">
                order by ${sidx} ${order}
            </when>
            <otherwise>
                order by hgs.goods_stock_id desc
            </otherwise>
        </choose>
        <if test="offset != null and limit != null">
            limit #{offset}, #{limit}
        </if>
    </select>
    <select id="queryHGoodsStockVoListTotal" resultType="int">
        select count(*) from h_goods_stock
    </select>

    <insert id="save" parameterType="io.renren.modules.stock.entity.HGoodsStock" useGeneratedKeys="true"
            keyProperty="goodsStockId">
        insert into h_goods_stock
        (
        `goods_id`,
        `qty`
        )
        values
        (
        #{goodsId},
        #{qty}
        )
    </insert>

    <update id="update" parameterType="io.renren.modules.stock.entity.HGoodsStock">
        update h_goods_stock
        <set>
            <if test="goodsId != null">`goods_id` = #{goodsId},</if>
            <if test="qty != null">`qty` = #{qty}</if>
        </set>
        where goods_stock_id = #{goodsStockId}
    </update>

    <delete id="delete">
        delete from h_goods_stock where goods_stock_id = #{value}
    </delete>

    <delete id="deleteBatch">
        delete from h_goods_stock where goods_stock_id in
        <foreach item="goodsStockId" collection="array" open="(" separator="," close=")">
            #{goodsStockId}
        </foreach>
    </delete>

    <update id="updateQtyByStockFlow">
        UPDATE h_goods_stock SET qty=qty+#{flowQty} WHERE goods_id=#{goodsId}
    </update>

    <select id="queryGoodsStockExists" resultType="java.lang.Integer">
        select count(*) from h_goods_stock WHERE goods_id=#{goodsId};
    </select>
</mapper>